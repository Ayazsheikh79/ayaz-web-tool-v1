generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String
  email        String        @unique
  password     String?
  role         String        @default("user")
  plan         Plan[]
  dailyLimit   DailyLimit?
  monthlyLimit MonthlyLimit?
  credit       Credit?
  download     Download[]
  order        Order[]
}

model Plan {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  code      Int
  active    Boolean  @default(true)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  startDate DateTime
  endDate   DateTime
}

model DailyLimit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  limit     Float    @default(0)
  code      Int      @default(0)
}

model MonthlyLimit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  limit     Float    @default(0)
  code      Int      @default(0)
}

model Credit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  amount    Float    @default(0)
}

model RedeemCode {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  code      String   @unique
  active    Boolean  @default(true)
  planCode  Int      @default(0)
  name      String
}

model Download {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  url       String
  dlUrl     String
  dlCode    String   @unique
  name      String
  type      String?
}

model PixedenToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  token     String
}

model Order {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderId     String   @unique
  orderAmount Float
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  plancode    Int
}
